---
title: "Bayesian Network Meta-Analysis: A Tutorial"
author: "Mark Bounthavong"
date: "5/11/2017"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Introduction

In this tutorial, we will perform a network meta-analysis (NMA) using Bayesian methods. NMA allows us to compare different treatments indirectly by borrowing strength from direct comparison studies. For example, we want to compare Drug A with Drug C. Now imagine that there are no studies that compare Drug A and C. Instead, there are studies that compare Drug A with Drug B and studies that compare Drug C with Drug B. Drug B is the common drug that the others are compared to. We take advantage of these direct relationships between Drugs A and C with Drug B and create a network where Drugs A and C can be compared with indirectly. Figure 1 illustrates the comparison between Drugs A, B, and C with both direct and indirect pathways. Note that Figure 1 also include a direct path between Drugs A and C. 

![Figure 1. Indirect and Direct comparisons between Drugs A, B, and C.](figure1.jpeg)

NMA allows us to generate information about the probability that an event (e.g., success versus failure, survives versus dies) will occur. This probability may be used in a Markov model where transition probabilities are used to simulate a hypothetical cohort across transition states. Figure 2 is a simple Markov model with an arrow going from State 0 to State 1. 

![Figure 2. Markov model for State 0 and State 1. The arrow indicates the transition from State 0 to State 1 and is based on the transition probablity.](figure2.gif)



############ EXERCISE 4-3
##### Clear the dataset
```{r}
rm(list=ls())

##### For mac:
# setwd("/Users/mbounthavong/Dropbox/UW Courses/PHARM 536 -- Beth's lecture/Beths Winbugs examples/Bayesian NMA tutorial")


##### For PC:
setwd("D:\\mboun\\Dropbox\\UW Courses\\PHARM 536 -- Beth's lecture\\Beths Winbugs examples\\Bayesian NMA tutorial")
```


```{r}
data_list <- list(
  ns = 9,
  na = c(2, 2, 2, 2, 2, 2, 2, 2, 2),
  t = structure(.Data = c(4, 1, 4, 3, 4, 3, 4, 1, 4, 2, 4, 5, 4, 1, 4, 2, 4, 1), .Dim = c(9, 2)),
  r = structure(.Data = c(31, 94, 32, 73, 7, 20, 6, 21, 59, 96, 33, 56, 8, 15, 60, 103, 3, 10), .Dim = c(9, 2)),
  n = structure(.Data = c(261, 260, 188, 192, 36, 37, 64, 65, 329, 336, 153, 154, 18, 19, 210, 215, 25, 25), .Dim = c(9, 2))
)

```


```{r}
## Embed the BUGS model
cat("model {
	for (i in 1:ns) {

    # Likelihood for each arm
      for (k in 1:na[i]) {
      r[i, k] ~ dbin(p[i, k], n[i, k])
      logit(p[i, k]) <- mu[i] + delta[i, k]
    }
    
      # Study-level relative effects
      # The arms are given in the order (arm_1, arm_2, ..., arm_{n_a-1}, arm_{n_a}).
      # The relative effects are parameterized as d[arm_1, arm_k].
      w[i, 1] <- 0
      delta[i, 1] <- 0

        for (k in 2:na[i]) { # parameterize multi-arm trials using a trick to avoid dmnorm
          delta[i, k] ~ dnorm(md[i, k], taud[i, k])
          md[i, k] <- d[t[i, 1], t[i, k]] + sw[i, k]
          taud[i, k] <- ((tau.d * 2 * (k - 1)) / k)
          w[i, k] <- delta[i, k] - d[t[i, 1], t[i, k]]
          sw[i, k] <- sum(w[i, 1:(k-1]) / (k - 1)
    }
    }
    
    # Relative effect matrix
    d[1,1] <- 0
    d[1,2] <- -d.Placebo.ADA + d.Placebo.CTZ
    d[1,3] <- -d.Placebo.ADA + d.Placebo.IFX
    d[1,4] <- -d.Placebo.ADA
    d[1,5] <- -d.Placebo.ADA + d.Placebo.VED
    d[2,1] <- d.Placebo.ADA + -d.Placebo.CTZ
    d[2,2] <- 0
    d[2,3] <- -d.Placebo.CTZ + d.Placebo.IFX
    d[2,4] <- -d.Placebo.CTZ
    d[2,5] <- -d.Placebo.CTZ + d.Placebo.VED
    d[3,1] <- d.Placebo.ADA + -d.Placebo.IFX
    d[3,2] <- d.Placebo.CTZ + -d.Placebo.IFX
    d[3,3] <- 0
    d[3,4] <- -d.Placebo.IFX
    d[3,5] <- -d.Placebo.IFX + d.Placebo.VED
    d[4,1] <- d.Placebo.ADA
    d[4,2] <- d.Placebo.CTZ
    d[4,3] <- d.Placebo.IFX
    d[4,4] <- 0
    d[4,5] <- d.Placebo.VED
    d[5,1] <- d.Placebo.ADA + -d.Placebo.VED
    d[5,2] <- d.Placebo.CTZ + -d.Placebo.VED
    d[5,3] <- d.Placebo.IFX + -d.Placebo.VED
    d[5,4] <- -d.Placebo.VED
    d[5,5] <- 0
    
    # Study baseline priors
    for (i in 1:ns) {
      mu[i] ~ dnorm(0, 1.904E-3)
    }
    
    # Variance prior
    sd.d ~ dunif(0, 1.528E0)
    tau.d <- pow(sd.d, -2)
    
    # Effect parameter priors
    d.Placebo.ADA ~ dnorm(0, 1.904E-3)
    d.Placebo.CTZ ~ dnorm(0, 1.904E-3)
    d.Placebo.IFX ~ dnorm(0, 1.904E-3)
    d.Placebo.VED ~ dnorm(0, 1.904E-3)
    }", file="nma1.txt")
```

##### load libraries
```{r}

library(rjags)
library(coda)
library(mcmcplots)

```


```{r}
##### Read the initial valuse into R.
inits <- list(
  d.Placebo.ADA = 1.388265790917909,
  d.Placebo.CTZ = 0.25916565964346244,
  d.Placebo.IFX = 0.8268554361045273,
  d.Placebo.VED = 0.2581658990241804,
  mu = c(-1.9886662444656795, -0.8825410115462085, -1.0134849834234265, -3.2017987520808435, -1.4802942672463546, -0.6105619472642414, -0.4507803942256785, -1.0455302538778515, -2.7800670327853485),
  delta = structure(.Data = c(NA, 1.4001762952657897, NA, 0.8661967180000879, NA, 2.3805414017275446, NA, 1.2846598341374118, NA, 0.5154207052324286, NA, 0.5574635613530288, NA, 2.2365332292919313, NA, 1.2700993332331474, NA, -0.08763694450017301), .Dim = c(9, 2)),
  sd.d = 1.157904659099175
)

params <- c("delta")
```

## The BUGS model is saved as a text or jag file. I used Notepad ++ to build the model
## but you can use any text editor. Please do not use Words.
```{r}
jags.m <- jags.model( file = "nma1.txt", data=data_list, inits=inits, n.chains=1, n.adapt=500 )
```

## run JAGS and save posterior samples
```{r}
samps <- coda.samples( jags.m, params, n.iter=10000 )
```


## summarize posterior samples
```{r}
summary(samps)
summary(window(samps, start=5001))  # Burn in of 5000. Start at 5001.
plot(samps)
```


## More plots
```{r}
caterplot(as.mcmc(samps), parms="OR")
```

